int sumOfFlooredPairs(int* nums, int numsSize){
    int i,j,k,max=0;
    long long res=0,rightP;
    if(numsSize<200){
        for(i=0;i<numsSize;i++){
           for(j=0;j<numsSize;j++){
               res+=nums[i]/nums[j];
            }
        }
        return res;
    }
    int map[100002]; memset(map,0,sizeof(map));
    for(i=0;i<numsSize;i++){if(nums[i]>max)max=nums[i];map[nums[i]]++;}
    int dp[max+10];dp[0]=0;
    for(i=1;i<=max;i++){dp[i]=dp[i-1]+map[i];}

    long long left=0,right=max;

    for(k=1;k<=max;k++){
        if(map[k]==0)continue;
        else
        for(left=1;left*k<=max;left=right+1){
            right=fmin( (left*10)*k,max);  
            rightP=(right+1)*k-1;
            if( rightP>max )rightP=max;
            if(dp[rightP]==dp[left*k-1])continue;
            for(j=left;j*k<=max&&j<=right;j++){
                 if(  (j+1)*k-1>max )res+=map[k]*j*( dp[max]-dp[j*k-1] );
                 else
                 res+=(long long)map[k]*j*(dp[(j+1)*k-1]-dp[ j*k-1 ]);
            }
        }
        
    }
    return res%1000000007;
}
