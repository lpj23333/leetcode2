int cmp(const void *a, const void *b){
    return *(int*)a - *(int*)b;
}
int maxSatisfaction(int* satisfaction, int satisfactionSize){
//升序排序
    qsort(satisfaction, satisfactionSize, 4, cmp);
    int satisfactionSizeLog = satisfactionSize;
    int sum = 0;
    int result = 0;
//总体求和
    while(satisfactionSizeLog--){
        sum += satisfaction[satisfactionSizeLog];
    }
//判断是否删去
    for(int i = 1, j = 1; i <= satisfactionSize && j <= satisfactionSize; i++, j++){
        sum -= satisfaction[i - 1];
        while(satisfaction[i - 1] < 0 && (satisfaction[i - 1] * j * -1 - sum) > 0 ? 1 : 0){
            i++;
            //防止下标越界
            if(!(i <= satisfactionSize)){
            return 0;
        }
            sum -= satisfaction[i - 1];
        }
        
        result += satisfaction[i - 1] * j;
    }
    return result;
}
