#define MAX_SIZE 200000;
bool hasEnoughCol (char** board, int boardSize, int boardColSize, int strLength, char * word);
bool hasEnoughRow (char** board, int boardSize, int boardColSize, int strLength, char * word);
bool placeWordInCrossword(char** board, int boardSize, int* boardColSize, char * word){
    int strLength = 0;
    char *str = word;
    while (*str != '\0') {
        strLength++;
        str++;
    }
    bool colCheck = false;
    bool rowCheck = false;
    colCheck = hasEnoughCol(board, boardSize, *boardColSize, strLength, word);
    if (colCheck) {
        return true;
    }
    rowCheck = hasEnoughRow(board, boardSize, *boardColSize, strLength, word);
    if (rowCheck) {
        return true;
    }
    return false;
}
bool hasEnoughCol (char** board, int boardSize, int boardColSize, int strLength, char * word) {
    for (int i = 0; i < boardColSize; i++) {
        int sumCol = 0;
        for (int j = 0; j < boardSize; j++) {
            if (board[j][i] == ' ') {
                sumCol++;
            } else if(board[j][i] == '#') {
                if (sumCol == strLength) {
                    return true;
                } else {
                    sumCol = 0;
                }
            } else if (sumCol < strLength && *(word + sumCol) == board[j][i]) {
                sumCol++;
            } else {
                sumCol = MAX_SIZE;
            }
        }
        if (sumCol == strLength) {
            return true;
        }
        sumCol = 0;
        for (int j = boardSize -1; j > -1; j--) {
            if (board[j][i] == ' ') {
                sumCol++;
            } else if(board[j][i] == '#') {
                if (sumCol == strLength) {
                    return true;
                } else {
                    sumCol = 0;
                }
            } else if (sumCol < strLength && *(word + sumCol) == board[j][i]) {
                sumCol++;
            } else {
                sumCol = MAX_SIZE;
            }
        }
        if (sumCol == strLength) {
            return true;
        }
    }
    return false;
}
bool hasEnoughRow (char** board, int boardSize, int boardColSize, int strLength, char * word) {
    for (int i = 0; i < boardSize; i++) {
        int sumRow = 0;
        for (int j = 0; j < boardColSize; j++) {
            if (board[i][j] == ' ') {
                sumRow++;
            } else if(board[i][j] == '#') {
                if (sumRow == strLength) {
                    return true;
                } else {
                    sumRow = 0;
                }
            } else if (sumRow < strLength && *(word + sumRow) == board[i][j]) {
                sumRow++;
            } else {
                sumRow = MAX_SIZE;
            }
        }
        if (sumRow == strLength) {
            return true;
        }
        sumRow = 0;
        for (int j = boardColSize -1; j > -1; j--) {
            if (board[i][j] == ' ') {
                sumRow++;
            } else if(board[i][j] == '#') {
                if (sumRow == strLength) {
                    return true;
                } else {
                    sumRow = 0;
                }
            } else if (sumRow < strLength && *(word + sumRow) == board[i][j]) {
                sumRow++;
            } else {
                sumRow = MAX_SIZE;
            }
        }
        if (sumRow == strLength) {
            return true;
        }
    }
    return false;
}
