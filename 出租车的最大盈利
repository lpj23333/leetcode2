int cmp(const void *a, const void *b) {
    int *aa = *(int**)a;
    int *bb = *(int**)b;
    return aa[1] - bb[1];
}

long long maxTaxiEarnings(int n, int** rides, int ridesSize, int* ridesColSize){
    qsort(rides, ridesSize, sizeof(rides[0]), cmp);
    long long dp[n + 1];
    memset(dp, 0, sizeof(dp));
    int j = 0;
    for (int i = 1; i <= n; i++) {
        dp[i] = dp[i - 1];
        while (j < ridesSize && i == rides[j][1]) {
            int start = rides[j][0];
            int end   = rides[j][1];
            int tip   = rides[j][2];
            dp[i] = fmax(dp[i], dp[start] + end - start + tip);
            j++;
        }
    }
    return dp[n];
}
