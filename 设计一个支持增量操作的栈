typedef struct {
    int stack[1001];
    int pos;
    int maxSize;
} CustomStack;


CustomStack* customStackCreate(int maxSize) {
    CustomStack* obj=malloc(sizeof(CustomStack));
    obj->pos=0;
    obj->maxSize = maxSize;
    return obj;
}

void customStackPush(CustomStack* obj, int x) {
    if(obj->pos<obj->maxSize){
        obj->stack[obj->pos++] = x;
    }
}

int customStackPop(CustomStack* obj) {
    if(obj->pos<1){
        return -1;
    }
    return obj->stack[--obj->pos];
}

void customStackIncrement(CustomStack* obj, int k, int val) {
    int minNum = fmin(obj->pos,k);
    for(int i=0;i<minNum;i++){
        obj->stack[i]+=val;
    }
}

void customStackFree(CustomStack* obj) {
    free(obj);
}
