//hetianbing write
#define MOD_NUM 1000000007
int C[1001][1001] = { 0 };
int isSet = 0;
void SetC()
{
    for(int i = 0; i < 1001; i++) {
        for(int j = 0; j <= i; j++) {
            if(i == 0 ||j == 0) {
                C[i][j] = 1;
            } else {
                // C n m
                C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % MOD_NUM;
            }
        }
    }
    isSet = 1;
}
int numOfWays_my(int* nums, int numsSize){
    if(numsSize == 0) {
        return 1;
    }
    int left[1000],right[1000];
    int leftCnt = 0,rightCnt = 0;
    for(int i = 1; i < numsSize; i++) {
        (nums[i] > nums[0]) ? (right[rightCnt++] = nums[i]) : (left[leftCnt++] = nums[i]);
    }
    int leftNum = numOfWays_my(left, leftCnt);
    int rightNum = numOfWays_my(right, rightCnt);
    return ((long long)leftNum * rightNum % MOD_NUM) * C[numsSize - 1][leftCnt] % MOD_NUM;
}
int numOfWays(int* nums, int numsSize){
    (isSet == 0) ? (SetC()) : (isSet = 1);
    int result = numOfWays_my(nums, numsSize) - 1;
    return (result < 0) ? (MOD_NUM - 1) : (result);
}
