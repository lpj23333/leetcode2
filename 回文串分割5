bool checkPartitioning(char * s){
    int len=strlen(s); int i,j,k,flag=0;
    char s1[len*2+2]; s1[0]='#';
    for(i=0,j=1;i<len;i++){
        s1[j++]=s[i]; s1[j++]='#';
    } s1[j]=0; 
    int Par[j+1],list[len+1]; 
    int R=-1,C=-1; len=j;


    //马拉车
    for(i=0;i<j;i++){
        Par[i]= R>i? fmin(Par[2*C-i],R-i):1;
        while(i+Par[i]<j&&i-Par[i]>=0){
            if(s1[i+Par[i]]==s1[i-Par[i]]){
                Par[i]++;
            }else break;
        }
        if(i+Par[i]>R){
            C=i; R=i+Par[i];
        }
    }

    //枚举两个分割点
    for(i=2;i<len-2;i+=2){
        if(i/2-Par[i/2]+1==0)
        for(j=i+1;j<len-1;j++){
            if( (len+j)/2+Par[(len+j)/2]==len && (i+j)/2+Par[(j+i)/2]>j && (i+j)/2 -Par[(j+i)/2]+1<=i && (i+j)/2 -Par[(j+i)/2]+1>=i/2){
               return 1;
            }
        }
    }
    return 0;
}
