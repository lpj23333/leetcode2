int calc(int x) {
    if (x == 1) {
        return 1;
    }
    if (x < 10) {
        return 2;
    }
    if (x < 100) {
        return 3;
    }
    return 4;
}

int getLengthOfOptimalCompression(char* s, int k) {
    int n = strlen(s);
    int f[n + 1][k + 1];
    memset(f, 0x3f, sizeof(f));
    f[0][0] = 0;
    for (int i = 1; i <= n; ++i) {
        for (int j = 0; j <= k && j <= i; ++j) {
            if (j > 0) {
                f[i][j] = f[i - 1][j - 1];
            }
            int same = 0, diff = 0;
            for (int i0 = i; i0 >= 1 && diff <= j; --i0) {
                if (s[i0 - 1] == s[i - 1]) {
                    ++same;
                    f[i][j] = fmin(f[i][j], f[i0 - 1][j - diff] + calc(same));
                } else {
                    ++diff;
                }
            }
        }
    }

    return f[n][k];
}
