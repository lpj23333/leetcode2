long min(long a,long b)
{
    return a < b ? a : b;
}
int minSkips(int* dist, int distSize, int speed, int hoursBefore)
{
    long dp[1001][1001];
    dp[0][0] = 0;
    for(int i=1;i<=distSize;i++)
    {
        dp[i][i] = dp[i-1][i-1] + dist[i-1];
        for(int j=0;j<i;j++)
        {
            if(j != i)
            {
                dp[i][j] = ((dp[i-1][j] / speed) + ((dp[i-1][j] % speed) != 0)) * speed + dist[i-1];
            }
            if(j != 0)
            {
                dp[i][j] = min(dp[i][j],dp[i-1][j-1] + dist[i-1]);
            }
        }
    }
    for(int i=0;i<=distSize;i++)
    {
        if(dp[distSize][i] <= (long)hoursBefore * speed)
        {
            return i;
        }
    }
    return -1;
}
