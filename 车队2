#define EPS (1e-5)
static inline double cal(int pos0, int v0, int pos1, int v1)
{
    // pos0 < pos1 && v0 > v1
    return ((double)(pos1 - pos0)) / (v0 - v1);
}


double* getCollisionTimes(int** cars, int carsSize, int* carsColSize, int* returnSize){\
    double *ans = calloc(carsSize, sizeof(double));
    *returnSize = carsSize;

    for (int i = 0; i < carsSize; i++) {
        ans[i] = -1.0;
    }

    int stack[carsSize], sLen = 0;

    for (int i = carsSize - 1; i >= 0; i--) {
        while (sLen && (cars[stack[sLen - 1]][1] >= cars[i][1] || (ans[stack[sLen - 1]] > 0 && cal(cars[i][0], cars[i][1], cars[stack[sLen - 1]][0], cars[stack[sLen - 1]][1]) > EPS + ans[stack[sLen - 1]]))) {
            sLen--;
        }

        if (sLen) {
            ans[i] = cal(cars[i][0], cars[i][1], cars[stack[sLen - 1]][0], cars[stack[sLen - 1]][1]);
        }
        stack[sLen++] = i;
    }
    return ans;
}
