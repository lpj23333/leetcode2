typedef struct {} TreeAncestor;
int dp[50001][20];
TreeAncestor* treeAncestorCreate(int n, int* parent, int parentSize) {
    int dep=0,i,j,k; 
    for(i=1;i<=n;i*=2)dep++;
    memset(dp,-1,sizeof(dp));
    for(i=0;i<n;i++)dp[i][0]=parent[i];
    for(i=0;i<n;i++){
        for(j=1;j<dep;j++){
            if(dp[i][j-1]==-1)continue;
            dp[i][j]=dp[dp[i][j-1]][j-1];
        }
    }
    return NULL;
}

int treeAncestorGetKthAncestor(TreeAncestor* obj, int node, int k) {
    for(int i=0;i<16;i++){
        if(k&(1<<i))node=dp[node][i];
        if(node==-1)return -1;
    }
    return node;
}

void treeAncestorFree(TreeAncestor* obj) {

}
