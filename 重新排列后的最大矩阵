int cmp(const void *a, const void *b) {
    return *(int*)b - *(int*)a;
}

int largestSubmatrix(int** matrix, int matrixSize, int* matrixColSize){
    int m = matrixSize;
    int n = matrixColSize[0];
    int i, j, h;
    int res = 0;
    /* 计算坐标[i,j], 向上连续1的个数 */
    for (i = 1; i < m; i++) {
        for (j = 0; j < n; j++) {
            if (matrix[i][j] == 1) {
                matrix[i][j] += matrix[i - 1][j];
            }
        }
    }
    for (i = 0; i < m; i++) {
        qsort(matrix[i], n, sizeof(int), cmp); /* 从大到小排列 */
        for (j = 0; j < n; j++) {
            h = matrix[i][j];
            res = fmax(res, h * (j + 1)); /* 计算面积 */
        }
    }
    return res;
}
