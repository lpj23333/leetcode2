int numberWays(int** hats, int hatsSize, int* hatsColSize){
    int n = hatsSize,m=40;
    
    int i=0,j=0,k=0,max=0,mod=1000000007;
    int **matrix = malloc(sizeof(int *)*n);
    for(i=0;i<n;i++){
        *(matrix+i) = malloc(sizeof(int)*m);
        memset(*(matrix+i),0,sizeof(int)*n);
        for(j=0;j<*(hatsColSize+i);j++){
            *(*(matrix+i)+*(*(hats+i)+j)-1)=1;
            if(*(*(hats+i)+j)>max){
                max = *(*(hats+i)+j);
            }
        }
    }
    int **dp = malloc(sizeof(int *)*m);
    for(i=0;i<max;i++){
        *(dp+i) = malloc(sizeof(int)*(1<<n));
        memset(*(dp+i),0,sizeof(int)*(1<<n));
        *(*(dp+i)+0)=1;
        for(j=1;j<(1<<n);j++){
            if(i>0){
                *(*(dp+i)+j) = *(*(dp+i-1)+j)%mod;
            }
            
            for(k=0;k<n;k++){
                if(*(*(matrix+k)+i)==1&&((1<<k)&j)){
                    if(i>0){
                        *(*(dp+i)+j) = (*(*(dp+i)+j)%mod + *(*(dp+i-1)+(j^(1<<k)))%mod)%mod;
                    }else{
                        if((1<<k)==j){
                            *(*(dp+i)+j) = 1;
                        }
                    }
                }
            }
        }
    }
    int ret = *(*(dp+max-1)+(1<<n)-1);
    return ret;
}
