int getbound(char *s, int num, int i)
{
    int cnt[2] = {0};
    while (cnt[1] < num && s[i] != '\0') {
        cnt[s[i++]-'0']++;
    }
    return i-1;
}
int numWays(char * s){
    long long cnt[2] = {0}, i, j, k, len = strlen(s), sum = 0, a[6] = {0};
    for (i = 0; i < len; i++) {
        cnt[s[i]-'0']++;
    }
    if (cnt[1] % 3 != 0) {
        return 0;
    }
    if (cnt[1] == 0)
    {
        return ((cnt[0] - 1) * (cnt[0] - 2) / 2) % 1000000007;
    }
    a[0] = getbound(s, cnt[1] / 3, 0);
    a[1] = getbound(s, 1, a[0]+1) -1 ;
    a[2] = getbound(s, cnt[1] / 3, a[1]+1);
    a[3] = getbound(s, 1, a[2]+1) - 1;
    return ((a[1]-a[0]+1) * (a[3]-a[2]+1)) % 1000000007;
}
