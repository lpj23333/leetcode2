int unhappyFriends(int n, int** preferences, int preferencesSize, int* preferencesColSize, int** pairs, int pairsSize, int* pairsColSize) {
    int order[n][n];
    memset(order, 0, sizeof(order));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n - 1; ++j) {
            order[i][preferences[i][j]] = j;
        }
    }
    int match[n];
    memset(match, 0, sizeof(match));
    for (int i = 0; i < pairsSize; ++i) {
        int* pr = pairs[i];
        match[pr[0]] = pr[1];
        match[pr[1]] = pr[0];
    }

    int unhappyCount = 0;
    for (int x = 0; x < n; ++x) {
        int y = match[x];
        int index = order[x][y];
        for (int i = 0; i < index; ++i) {
            int u = preferences[x][i];
            int v = match[u];
            if (order[u][x] < order[u][v]) {
                ++unhappyCount;
                break;
            }
        }
    }
    return unhappyCount;
}
