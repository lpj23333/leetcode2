bool isValid(char *word, int n) {
    int has_hyphens = 0;
    for (int i = 0; i < n; i++) {
        if (word[i] >= '0' && word[i] <= '9') {
            return false;
        } else if (word[i] == '-') {
            if (has_hyphens == 1 || i == 0 || i == n - 1 || !islower(word[i - 1]) || !islower(word[i + 1])) {
                return false;
            }
            has_hyphens = 1;
        } else if (word[i] == '!' || word[i] == '.' || word[i] == ',') {
            if (i != n - 1) {
                return false;
            }
        }
    }
    return true;
}

int countValidWords(char * sentence){
    int n = strlen(sentence);
    int l = 0, r = 0;
    int ret = 0;
    while (true) {
        while (l < n && sentence[l] == ' ') {
            l++;
        }
        if (l >= n) {
            break;
        }
        r = l + 1;
        while (r < n && sentence[r] != ' ') {
            r++;
        }
        if (isValid(sentence + l, r - l)) { // 判断根据空格分解出来的 token 是否有效
            ret++;
        }
        l = r + 1;
    }
    return ret;
}
